webpackJsonp([207],{1148:function(s,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={head:{title:"Vue 异步加载组件 | VUX - Vue 移动端 UI 组件库",ignoreSuffixChar:"|"}}},1963:function(s,e,t){var a=t(67)(t(1148),t(2178),null,null,null);a.options.__file="/home/runner/work/vux/vux/docs/node_modules/v-markdown-loader/_cache/vue-webpack-code-splitting-async-163.vue",a.esModule&&Object.keys(a.esModule).some(function(s){return"default"!==s&&"__"!==s.substr(0,2)})&&console.error("named exports are not supported in *.vue files."),a.options.functional&&console.error("[vue-loader] vue-webpack-code-splitting-async-163.vue: functional components are not supported with templates, they should use render functions."),s.exports=a.exports},2178:function(s,e,t){s.exports={render:function(){var s=this,e=s.$createElement;s._self._c;return s._m(0)},staticRenderFns:[function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("div",[t("h1",[s._v("异步加载组件")]),s._v(" "),t("p",[s._v("将所有页面组件一次性加载是一个很浪费资源和考验用户耐心的做法，尤其在移动端。")]),s._v(" "),t("h2",[s._v("使用方法")]),s._v(" "),t("p",[t("code",[s._v("webpack")]),s._v(" 提供了"),t("a",{attrs:{href:"https://webpack.js.org/guides/code-splitting-require/"}},[s._v("code splitting")]),s._v("，你可以按照下面写法实现当切换到特定路由时才加载代码。")]),s._v(" "),t("p",[s._v("需要注意的是 "),t("code",[s._v("vue-loader@13.0.0")]),s._v(" 语法有所变更，具体参照发布说明 "),t("a",{attrs:{href:"https://github.com/vuejs/vue-loader/releases/tag/v13.0.0"}},[s._v("v13.0.0")])]),s._v(" "),t("pre",{staticClass:"hljs"},[t("code",[t("span",{staticClass:"hljs-comment"},[s._v("// vue-loader@13.0.0 之前")]),s._v("\n"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" Foo = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-params"},[s._v("()")]),s._v(" =>")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v("'./Foo.vue'")]),s._v(") "),t("span",{staticClass:"hljs-comment"},[s._v("// 在 Vue 2.4 + vue-router 2.7 版本下可以正确运行")]),s._v("\n\n"),t("span",{staticClass:"hljs-comment"},[s._v("// vue-loader@13.0.0")]),s._v("\n"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" Foo = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-params"},[s._v("()")]),s._v(" =>")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v("'./Foo.vue'")]),s._v(").then("),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-params"},[s._v("m")]),s._v(" =>")]),s._v(" m.default)\n")])]),s._v(" "),t("h2",[s._v("组件打包问题")]),s._v(" "),t("p",[s._v("如果你在不同的进行了代码分割的 .vue 文件引入了相同的组件，在打包时两个路由的代码都会重复打包该组件。")]),s._v(" "),t("p",[s._v("你可以对重复使用的组件在 "),t("code",[s._v("main.js")]),s._v(" 进行全局注册，以减少相应 chunk file 的大小并提高下载速度。")])])}]},s.exports.render._withStripped=!0},581:function(s,e,t){s.exports=t(1963)}});
//# sourceMappingURL=207.e3148334.js.map